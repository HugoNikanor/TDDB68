#include <stdio.h>
#include <stdlib.h>

typedef struct list_item {
    int value;
    struct list_item *next;
} list_item;


void append(struct list_item *first, int x){
  while(first->next != NULL) {
    first = first->next;
  }
  list_item *new_node = (list_item *) malloc(sizeof(list_item));
  new_node->value = x;
  new_node->next = NULL;
  first->next = new_node;
}

void prepend(struct list_item *first, int x) {
    list_item *new_node = (list_item *) malloc(sizeof(list_item));
    new_node->value = x;
    new_node->next = first->next;
    first->next = new_node;
}

void print(struct list_item *first) {
  while(first->next != NULL) {
    first = first->next;
    printf("%i\n", first->value);
  }
}
  
void input_sorted(struct list_item *first, int x);
void clear(struct list_item *first); /* free everything dynamically allocated */




 int main( int argc, char ** argv)
  {
    struct list_item root;
    root.value = -1; /* This value is always ignored */
    root.next = NULL;

    append(&root, 2); 
    append(&root, 3);
    append(&root, 42); 

    print(&root);

    prepend(&root, 16);

    print(&root);

  }
